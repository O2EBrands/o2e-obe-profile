<?php

/**
 * @file
 * Contains o2e_obe_promo_code.module.
 */

use Drupal\Core\Render\BubbleableMetadata;

/**
 * Implements hook_token_info().
 */
function o2e_obe_promo_code_token_info() {
  $token_type['custom_token'] = [
    'name' => t("Custom"),
    'description' => t("Custom type grouping for tokens."),
  ];

  $token['same-day-promo-code-detail'] = [
    'name' => t("Sameday Promo Code Detail"),
    'description' => t("Token will get the value for SameDay Promo code detail stored in config form."),
  ];

  $token['same-day-promo-code-term'] = [
    'name' => t("Sameday Promo Code Term"),
    'description' => t("Token will get the value for SameDay Promo code term stored in config form."),
  ];

  $token['zip-code'] = [
    'name' => t("Zip Code"),
    'description' => t("Zip Code will be prepopulated in Address field for Postal Code.")
  ];

  $token['state'] = [
    'name' => t("State"),
    'description' => t("State Name will be prepopulated in Address field for State.")
  ];

  $token['country'] = [
    'name' => t("Country"),
    'description' => t("Country will be prepopulated in Address field for Country.")
  ];

  $token['serviceId'] = [
    'name' => t("Service ID"),
    'description' => t("Gets the service ID for the O2E multistep webform.")
  ];

  return [
    'types' => $token_type,
    'tokens' => [
      'custom_token' => $token,
    ],
  ];
}

/**
 * Implements hook_tokens().
 */
function o2e_obe_promo_code_tokens($type, $tokens, array $data, array $options, BubbleableMetadata $bubbleable_metadata) {
  $replacements = [];
  if ($type === 'custom_token') {
    foreach ($tokens as $name => $original) {
      $config = \Drupal::config('o2e_obe_promo_code.settings')->get('o2e_obe_promo_code');
      $promo_status = FALSE;
      if ($config && !empty($config['sameday_status']) && $config['sameday_status'] == TRUE) {
        $promo_status = TRUE;
      }
      switch ($name) {
        case 'same-day-promo-code-detail':
          $sameday_promo_detail = "";
          if ($promo_status && !empty($config['sameday_details'])) {
            $sameday_promo_detail = $config['sameday_details'];
          }
          $replacements[$original] = $sameday_promo_detail;
          break;

        case 'same-day-promo-code-term':
          $sameday_promo_term = "";
          if ($promo_status && !empty($config['sameday_terms'])) {
            $sameday_promo_term = $config['sameday_terms'];
          }
          $replacements[$original] = $sameday_promo_term;
          break;

        case 'zip-code':
          $zip_code = '';
          if (!empty(\Drupal::state()->get('zip_code'))) {
            $zip_code = \Drupal::state()->get('zip_code');
          }
          $replacements[$original] = $zip_code;
          break;

        case 'state':
          $state = '';
          if (!empty(\Drupal::state()->get('state'))) {
            $state = \Drupal::state()->get('state');
          }
          $replacements[$original] = $state;
          break;
        
        case 'country':
          $country = '';
          if (!empty(\Drupal::state()->get('zip_code'))) {
            $zip_code = \Drupal::state()->get('zip_code');
            if (preg_match('#[0-9]{5}#', $zip_code)) {
              $country = 'United States';
              \Drupal::state()->set('country_code', 'US');
            } elseif (preg_match('/^([a-zA-Z]\d[a-zA-Z])\ {0,1}(\d[a-zA-Z]\d)$/', $zip_code)) {
              $country = 'Canada';
              \Drupal::state()->set('country_code', 'CA');
            }
          }
          $replacements[$original] = $country;
          break;

        case 'serviceId':
          $serviceId = !empty(\Drupal::service('tempstore.private')->get('service_id')) ?? '';
          $replacements[$original] = $serviceId;
          break;
      }
    }
  }
  return $replacements;
}
